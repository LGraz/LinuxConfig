[
    ///////////////////////////////
    // Custom
    ///////////////////////////////
    { // git: stage commit push
        "key": "alt+g",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "git add . ; git commit -m '.' ; git push origin \n"
        }
    },
    ///////////////////////////////
    // EDITOR
    ///////////////////////////////
    // Comments
    {
        "key": "ctrl+[Backslash]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    ///////////////////////////////
    // TERMINAL 
    ///////////////////////////////
    // verschieben
    {
        "key": "ctrl+shift+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.terminal.resizePaneRight",
        //"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.terminal.resizePaneLeft",
        //"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+k",
        "command": "workbench.action.terminal.resizePaneUp",
        //"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+j",
        "command": "workbench.action.terminal.resizePaneDown",
        //"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    // Change focus between terminals
    {
        "key": "alt+j",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    // Focus & Hide
    {
        "key": "alt+enter",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "alt+enter",
        "command": "workbench.action.terminal.splitInActiveWorkspace",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+enter",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.focusPanel"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "panelFocus"
    },
    {
        "key": "alt+escape",
        "command": "workbench.action.togglePanel",
        // "when": "!terminalFocus"
    },
    ////////////////////////////
    //  Panel
    ////////////////////////////
    {
        "key": "alt+l",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    // toggle fullscreen
    {
        "key": "alt+f11",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    // END TERMINAL
    //
    /////////////////////////////
    //  navigate Editors
    ////////////////////////////
    // move
    {
        "key": "shift+alt+k",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    // focus editor-groups
    {
        "key": "alt+k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.focusRightGroup"
    },
    // focus tabs
    {
        "key": "alt+u",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.nextEditorInGroup"
    },
    // END Navigation --------------
    //
    /////////////////////////////////
    // R
    /////////////////////////////////
    {
        "key": "alt+-",
        "command": "type",
        "when": "editorLangId == r && editorTextFocus || editorLangId == rmd && editorTextFocus",
        "args": {
            "text": " <- "
        }
    },
    {
        "key": "ctrl+shift+m",
        "command": "type",
        "when": "editorLangId == r && editorTextFocus || editorLangId == rmd && editorTextFocus",
        "args": {
            "text": " %>% "
        }
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    // input indicative of r markdown code chunk
    {
        "key": "ctrl+shift+i",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && editorLangId == 'rmd'",
        "args": {
            "snippet": "```{r}\n${TM_SELECTED_TEXT}$0\n```"
        },
        "label": "input indicative of r markdown code chunk"
    },
    // you can also input indicative of code chunk in `r` file by inserting "# %% ":
    // specifics in `https://github.com/REditorSupport/vscode-R/pull/662`
    {
        "key": "ctrl+shift+i",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && editorLangId == 'r'",
        "args": {
            "snippet": "$LINE_COMMENT %% "
        },
        "label": "input indicative of code chunk"
    },
    // END R ------------------------------------------------
    /////////////////////////////////
    //  Garbage  (deactivate defaults)
    /////////////////////////////////
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-workbench.action.showTreeHover",
        "when": "customTreeView && listFocus && !inputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+l",
        "command": "-toggleSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+alt+h",
        "command": "-references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showIncomingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showOutgoingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showSubtypes",
        "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showSupertypes",
        "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
    },
    {
        "key": "alt+h",
        "command": "-testing.toggleTestingPeekHistory",
        "when": "testing.isPeekVisible"
    },
    {
        "key": "alt+meta+j",
        "command": "-notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-latex-workshop.synctex",
        "when": "editorTextFocus && !config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-code-runner.runByLanguage"
    },
    {
        "key": "shift+alt+meta+j",
        "command": "-notebook.cell.joinAbove",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+l alt+j",
        "command": "-latex-workshop.synctex",
        "when": "config.latex-workshop.bind.altKeymap.enabled && editorTextFocus && !virtualWorkspace && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-code-runner.runCustomCommand"
    },
    {
        "key": "alt+enter",
        "command": "-latex-workshop.onAltEnterKey",
        "when": "acceptSuggestionOnEnter && config.latex-workshop.bind.enter.key && editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^latex$|^latex-expl3$|^rsweave$|^jlweave$/"
    },
    {
        "key": "alt+enter",
        "command": "-latex-workshop.onAltEnterKey",
        "when": "config.latex-workshop.bind.enter.key && editorTextFocus && !acceptSuggestionOnEnter && !editorReadonly && editorLangId =~ /^latex$|^latex-expl3$|^rsweave$|^jlweave$/"
    },
    ////////////////////////////////
    //  NEW
    ////////////////////////////////
    // { // want to rempap focus
    //     "key": "alt+f",
    //     "command": "editor.toggleFold",
    //     "when": "editorTextFocus && foldingEnabled"
    // },
    {
        "key": "ctrl+t",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.showTreeHover",
        "when": "customTreeView && listFocus && !inputFocus"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+d",
        "command": "jupyter.debugcurrentcell.palette"
    },
    {
        "key": "alt+p",
        "command": "-keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "alt+p",
        "command": "-togglePreserveCase",
        "when": "editorFocus"
    },
    {
        "key": "alt+p",
        "command": "-toggleSearchPreserveCase",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack",
        "when": "editorTextFocus || editorFocus"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward",
        "when": "editorTextFocus || editorFocus"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+i",
        "command": "cursorRedo"
    },
    {
        "key": "alt+e",
        "command": "editor.toggleFold"
    },
]
