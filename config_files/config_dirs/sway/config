# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $super Mod4
set $move Mod1
set $alt Mod1
set $shift Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

include window_management
include theming

set $term wezterm

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --
exec bash -c "albert --platform xcb"

bindsym $super+d exec albert toggle
bindsym $super+$alt+d exec "dmenu_run -b -nf '#BBBBBB' -nb '#222222' -sb '#EF11FF' -sf '#000000' -fn 'monospace-16' -p 'run: '"

### Output configurationd
#
# wallpaper
output * bg ~/LinuxConfig/config_files/homedir/.wallpaper.jpg fill
#
# Example configuration:
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
# You can get the names of your outputs by running: swaymsg -t get_outputs


### Idle configuration
# exec swayidle -w \
#          timeout 900 'swaylock -f -c 001800' \
#          timeout 1800 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'playerctl pause'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


### Key bindings
#
# Basics:
#
    # terminal
    bindsym $super+Return exec $term

    # Kill (except current window is simplenote -> move to scratchpad)
    # bindsym $super+$alt+q exec swaymsg -t get_tree | jq -re '.. | select(type == "object") | select(.focused) .name == "Simplenote" ' && swaymsg "scratchpad show" || swaymsg kill
    bindsym $super+$alt+q kill

    # Lock
    bindsym $super+$alt+s exec 'swaylock -f -c 001800'

    # Drag floating windows by holding down $super and left mouse button.
    # Resize them with right mouse button + $super.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $super normal

    # Reload the configuration file
    bindsym $super+$alt+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $super+ctrl+s exec swaymsg exit


    # xkb_layout "ch(de_nodeadkeys)"
input * {
    repeat_delay 250
    repeat_rate 45
    xkb_layout "ch(de_nodeadkeys)"
    xkb_options "caps:super"
}
# German Umlaute: Ö Ü Ä
# bindsym egrave exec xdotool key Udiaeresis
# bindsym eacute exec xdotool key Odiaeresis
# bindsym agrave exec xdotool key Adiaeresis

# bindsym $super+diaeresis exec xdotool key ctrl+Prior 
# bindsym $super+udiaeresis exec xdotool key ctrl+Next 
# bindsym ctrl+diaeresis exec xdotool key ctrl+Prior 
# bindsym ctrl+udiaeresis exec xdotool key ctrl+Next 

# bindsym egrave exec wtype Ü
# bindsym eacute exec wtype Ö
# bindsym agrave exec wtype Ä

bindsym $alt+u exec wtype -M ctrl -P Page_Up
bindsym $alt+i exec wtype -M ctrl -P Page_Down


input type:touchpad {
    tap enabled
    natural_scroll enabled
}

bindsym $super+g exec "wezterm start -- yazi"

bindsym XF86MonBrightnessDown exec light -T 0.6
bindsym $super+F5             exec light -T 0.6
bindsym XF86MonBrightnessUp   exec light -T 1.6
bindsym $super+F6             exec light -T 1.6

# execute script $HOME/LinuxConfig/user_scripts/dmenu.sh
bindsym $super+less exec $HOME/LinuxConfig/user_scripts/dmenu.sh


bindsym $super+c exec clipman pick -t dmenu --tool-args="-nf '#BBBBBB' -nb '#222222' -sb '#EF11FF' -sf '#000000' -fn 'monospace-16'"
bindsym $super+$alt+c clipman clear --all

bindsym $super+Shift+f exec firefox about:logins
for_window [app_id="firefox"] move to workspace number 99
for_window [app_id="firefox" title="Pushbullet"] floating enable
for_window [app_id="firefox" title="Firefox — Sharing Indicator"] floating enable
for_window [app_id="firefox" title="Picture-in-Picture"] floating enable
for_window [app_id="firefox" title="Pushbullet – Mozilla Firefox"] floating enable
for_window [app_id="firefox" title="About Mozilla Firefox"] floating enable

for_window [app_id="albert"] floating enable

# for_window [class="code-oss"] move to workspace number 0, layout tabbed
for_window [title="(^Foam-Private$)"] move workspace number 20
for_window [title="(^Foam-Work$)"] move workspace number 21
for_window [title="(VSCODE$)"] move to workspace number 0, layout tabbed
for_window [title="(R Graphics)"] floating enable move absolute position 0 ppt 70 ppt; resize set height 32 ppt ; resize set width 40 ppt

for_window [class="Spotify"] move to workspace number 13

for_window [class="rambox"] move to workspace number 12
for_window [class="element"] move to workspace number 12
for_window [class="riot"] move to workspace number 12

for_window [class="Mail"] move to workspace number 11
for_window [class="thunderbird"] move to workspace number 11
for_window [class="evolution"] move to workspace number 11

for_window [class="okular"] move to workspace number 98, layout tabbed
for_window [class="evince"] move to workspace number 98, layout tabbed

# disable chrome shortcuts
# for_window [app_id="^chrome-.*"] shortcuts_inhibitor disable

# Screenshots:
    # # Current display to clipboard
    # bindsym Print exec grimshot --notify copy output
    # # Current display to file
    # bindsym $mod+Print exec grimshot --notify save output
    # # All displays to file
    # bindsym ctrl+alt+Print exec grimshot --notify save
    # # Current window to clipboard
    # bindsym alt+Print exec grimshot --notify copy active
    # # Current window to file
    # bindsym $mod+alt+Print exec grimshot --notify save active
    # # Region-select-screenshot to clipboard
    bindsym $super+Print exec grimshot --notify copy area
    # # Region-select-screenshot to file
    # bindsym $mod+ctrl+Print exec grimshot --notify save area

# Audio:
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym $super+F10    exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym $super+F12           exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym $super+F11           exec pactl set-sink-volume @DEFAULT_SINK@ -5%

    # Media player controls
    bindsym XF86AudioPlay  exec playerctl play-pause
    bindsym XF86AudioPause exec playerctl play-pause
    bindsym $super+F8     exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym $super+F9     exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    bindsym $super+F7     exec playerctl previous

exec_always bash -c "pkill kanshi; sleep 0.1; exec kanshi" &
exec_always bash -c "pkill waybar; sleep 0.1; exec waybar" &
exec_always ~/.config/sway/autotiling -w 1 2 3 4 5 6 7 8 9 10 11 12 13 20 21
exec nm-applet --indicator
exec owncloud
exec wl-paste -t text --watch clipman store --no-persist
exec mkdir -p $HOME/Pictures/Screenshots &
exec dunst &

exec swaymsg "workspace 99; exec firefox"
# exec swaymsg "workspace 11; exec thunderbird"
exec swaymsg "workspace 12; exec ferdium"
# exec swaymsg "workspace 12; exec flatpak run im.riot.Riot"

exec swaymsg "exec sleep 2 && ~/Applications/activitywatch/aw-qt" &
exec ~/.top_logger

# autostart scratchpad
# exec 'bash -c "simplenote --in-process-gpu || /scratch/users/lgraz/Applications/Simplenote-linux-2.21.0-x86_64.AppImage --no-sandbox"'
# for_window [class="simplenote"] move scratchpad
bindsym $super+$move scratchpad show

exec udiskie -s

exec 'dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK'


# bar waybar # {
#     position top
#     font pangou:FontAwesome  12
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while ~/.config/sway/status.sh; do sleep 1; done
#     # date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#     strip_workspace_numbers yes
#     strip_workspace_name no
#     colors {
# 			background #000000
# 			statusline #FFFFFF
# 			separator  #666666
# 			# 07d7c1 nice green
# 			focused_workspace  #FF00FF #FF00FF #000000
# 			# focused_workspace  #C50ED2 #111111 #C50ED2
# 			active_workspace   #C50ED2 #222222 #FFFFFF
# 			inactive_workspace #7d7c13 #111111 #DDDDDD
# 			urgent_workspace   #FF435E #FF435E #FFFFFF
# 			binding_mode       #FF435E #FF435E #FFFFFF
# 		}
# }
